# PySNMP SMI module. Autogenerated from smidump -f python CLOUDANT-METRICS-MIB
# by libsmi2pysnmp-0.1.3 at Mon May  6 15:26:05 2013,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( CloudantReal, ) = mibBuilder.importSymbols("CLOUDANT-PLATFORM-MIB", "CloudantReal")
( cloudantMetricsMIB, cloudantModules, ) = mibBuilder.importSymbols("CLOUDANT-REG-MIB", "cloudantMetricsMIB", "cloudantModules")
( Bits, Integer32, ModuleIdentity, MibIdentifier, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")

# Objects

cloudantMetricsModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 40277, 1, 1, 6)).setRevisions(("2012-08-09 03:00",))
if mibBuilder.loadTexts: cloudantMetricsModule.setOrganization("Cloudant, Inc.")
if mibBuilder.loadTexts: cloudantMetricsModule.setContactInfo("580 Harrison Ave., Boston, MA 02118, USA")
if mibBuilder.loadTexts: cloudantMetricsModule.setDescription("Cloudant Metrics object and event definition MIB")
cloudantMetricsObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 40277, 3, 4, 1))
if mibBuilder.loadTexts: cloudantMetricsObjects.setDescription("Sub-tree for accessible objects in the MIB.")
cloudantHostName = MibScalar((1, 3, 6, 1, 4, 1, 40277, 3, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: cloudantHostName.setDescription("The hostname of the attached to a metrics trap. Necessary because metrics\ntraps are sent from a centralized device, not the affected device.")
cloudantMetricName = MibScalar((1, 3, 6, 1, 4, 1, 40277, 3, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: cloudantMetricName.setDescription("The name of the metric attached to a trap.")
cloudantMetricValue = MibScalar((1, 3, 6, 1, 4, 1, 40277, 3, 4, 1, 3), CloudantReal()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: cloudantMetricValue.setDescription("The value of the metric attached to a trap.")
cloudantMetricThreshold = MibScalar((1, 3, 6, 1, 4, 1, 40277, 3, 4, 1, 4), CloudantReal()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: cloudantMetricThreshold.setDescription("The threshold associated with a metric.")
cloudantMetricSeverity = MibScalar((1, 3, 6, 1, 4, 1, 40277, 3, 4, 1, 5), CloudantReal()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: cloudantMetricSeverity.setDescription("The current severity level.")
cloudantMetricLowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 40277, 3, 4, 1, 6), CloudantReal()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: cloudantMetricLowerThreshold.setDescription("The lower threshold associated with a metric.")
cloudantMetricUpperThreshold = MibScalar((1, 3, 6, 1, 4, 1, 40277, 3, 4, 1, 7), CloudantReal()).setMaxAccess("notifyonly")
if mibBuilder.loadTexts: cloudantMetricUpperThreshold.setDescription("The upper threshold associated with a metric.")
cloudantMetricsEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 40277, 3, 4, 2))
if mibBuilder.loadTexts: cloudantMetricsEvents.setDescription("A sub-tree for all the CLOUDANT-METRICS-MIB related events\nand traps.")

# Augmentions

# Notifications

cloudantMetricsTrap = NotificationType((1, 3, 6, 1, 4, 1, 40277, 3, 4, 2, 1)).setObjects(*(("CLOUDANT-METRICS-MIB", "cloudantMetricUpperThreshold"), ("CLOUDANT-METRICS-MIB", "cloudantMetricThreshold"), ("CLOUDANT-METRICS-MIB", "cloudantMetricSeverity"), ("CLOUDANT-METRICS-MIB", "cloudantMetricLowerThreshold"), ("CLOUDANT-METRICS-MIB", "cloudantMetricValue"), ("CLOUDANT-METRICS-MIB", "cloudantMetricName"), ("CLOUDANT-METRICS-MIB", "cloudantHostName"), ) )
if mibBuilder.loadTexts: cloudantMetricsTrap.setDescription("A cloudantMetricsTrap is sent when a metric crosses an alerting\nthreshold.")

# Exports

# Module identity
mibBuilder.exportSymbols("CLOUDANT-METRICS-MIB", PYSNMP_MODULE_ID=cloudantMetricsModule)

# Objects
mibBuilder.exportSymbols("CLOUDANT-METRICS-MIB", cloudantMetricsModule=cloudantMetricsModule, cloudantMetricsObjects=cloudantMetricsObjects, cloudantHostName=cloudantHostName, cloudantMetricName=cloudantMetricName, cloudantMetricValue=cloudantMetricValue, cloudantMetricThreshold=cloudantMetricThreshold, cloudantMetricSeverity=cloudantMetricSeverity, cloudantMetricLowerThreshold=cloudantMetricLowerThreshold, cloudantMetricUpperThreshold=cloudantMetricUpperThreshold, cloudantMetricsEvents=cloudantMetricsEvents)

# Notifications
mibBuilder.exportSymbols("CLOUDANT-METRICS-MIB", cloudantMetricsTrap=cloudantMetricsTrap)

